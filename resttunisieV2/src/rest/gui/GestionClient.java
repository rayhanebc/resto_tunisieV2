/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package rest.gui;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import rest.DAO.ClientDAO;
import rest.DAO.UserDAO;
import rest.entities.Client;
import rest.entities.User;

/**
 *
 * @author acer
 */
public class GestionClient extends javax.swing.JInternalFrame {

    /**
     * Creates new form NewJInternalFrame
     */
    public GestionClient() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableClient = new javax.swing.JTable();
        btnSupprimer = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnQuitter = new javax.swing.JButton();

        setTitle("Gestion des Clients");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        tableClient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Login", "Nom", "Prenom", "Cin", "Adresse", "Mail", "Tel"
            }
        ));
        jScrollPane1.setViewportView(tableClient);

        btnSupprimer.setText("Supprimer");
        btnSupprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSupprimerActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Gestion des Clients");

        btnQuitter.setText("Fermer");
        btnQuitter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 225, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(220, 220, 220))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSupprimer))
                .addGap(16, 16, 16)
                .addComponent(btnQuitter)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSupprimer)
                    .addComponent(btnQuitter))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:   
        List<Object> lst = ClientDAO.getInstance().displayAll();
        DefaultTableModel model = (DefaultTableModel) tableClient.getModel();
        for (int i = 0; i < lst.size(); i++) {
            Client c = (Client) lst.get(i);
            model.addRow(new Object[]{c.getLogin(), c.getNom(), c.getPrenom(), c.getCin(), c.getAdresse(), c.getMail(), c.getTelephone()});
        }
    }//GEN-LAST:event_formInternalFrameOpened

    private void btnSupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSupprimerActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tableClient.getModel();
        if (tableClient.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "aucun client");
        } else {
            if (tableClient.getSelectedRow() == -1) {
                JOptionPane.showMessageDialog(null, "aucun client selectionner");
            } else {
                Client c = new Client();
                c.setCin(Integer.parseInt(tableClient.getValueAt(tableClient.getSelectedRow(), 3).toString()));
                ClientDAO.getInstance().delete(c);

                User usr = new User(tableClient.getValueAt(tableClient.getSelectedRow(), 1).toString(), "");
                UserDAO.getInstance().delete(usr);
                model.removeRow(tableClient.getSelectedRow());
                JOptionPane.showMessageDialog(null, "Le Client a été supprimer avec succée");
            }
        }
    }//GEN-LAST:event_btnSupprimerActionPerformed

    private void btnQuitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitterActionPerformed
        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnQuitterActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnQuitter;
    private javax.swing.JButton btnSupprimer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableClient;
    // End of variables declaration//GEN-END:variables
}
