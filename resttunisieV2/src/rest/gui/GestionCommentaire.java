/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package rest.gui;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import rest.DAO.ClientDAO;
import rest.DAO.CommentaireDAO;
import rest.DAO.RestaurateurDAO;
import rest.entities.Client;
import rest.entities.Commentaire;
import rest.entities.Restaurateur;

/**
 *
 * @author acer
 */
public class GestionCommentaire extends javax.swing.JInternalFrame {

    /**
     * Creates new form GestionCommentaire
     */
    public GestionCommentaire() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableCommentaire = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnSupprimer = new javax.swing.JButton();
        btnQuitter = new javax.swing.JButton();

        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        tableCommentaire.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "restaurant", "Client", "E-mail", "Commentaire", "id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableCommentaire);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Gestion des Commentaire");

        btnSupprimer.setText("Supprimer");
        btnSupprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSupprimerActionPerformed(evt);
            }
        });

        btnQuitter.setText("Fermer");
        btnQuitter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(177, 177, 177)
                        .addComponent(jLabel1)))
                .addContainerGap(66, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnSupprimer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnQuitter)
                .addGap(15, 15, 15))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSupprimer)
                    .addComponent(btnQuitter))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened


        List<Object> lst = CommentaireDAO.getInstance().displayAll();
        DefaultTableModel model = (DefaultTableModel) tableCommentaire.getModel();
        for (int i = 0; i < lst.size(); i++) {
            Commentaire c = (Commentaire) lst.get(i);
            Restaurateur r = (Restaurateur) RestaurateurDAO.getInstance().find(c.getResto());
            Client cl = (Client) ClientDAO.getInstance().find(c.getClient());
            model.addRow(new Object[]{r.getNom_resto(), cl.getNom(), cl.getMail(), c.getLabel(), c.getId()});
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_formInternalFrameOpened

    private void btnQuitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitterActionPerformed

        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnQuitterActionPerformed

    private void btnSupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSupprimerActionPerformed

        DefaultTableModel model = (DefaultTableModel) tableCommentaire.getModel();
        if (tableCommentaire.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "aucun commentaire");
        } else {
            if (tableCommentaire.getSelectedRow() == -1) {
                JOptionPane.showMessageDialog(null, "aucun commentaire selectionner");
            } else {
                Commentaire c = new Commentaire();
                c.setId(Integer.parseInt(tableCommentaire.getValueAt(tableCommentaire.getSelectedRow(), 4).toString()));
                System.out.println(c.getId());
                CommentaireDAO.getInstance().delete(c);
                model.removeRow(tableCommentaire.getSelectedRow());
                JOptionPane.showMessageDialog(null, "Le commentaire a été supprimer avec succée");
            }
        }


        // TODO add your handling code here:
    }//GEN-LAST:event_btnSupprimerActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnQuitter;
    private javax.swing.JButton btnSupprimer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableCommentaire;
    // End of variables declaration//GEN-END:variables
}
